pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
            // Check if Composer is installed, install it if not
            sh 'which composer || php -r "copy(\'https://getcomposer.org/installer\', \'composer-setup.php\');"'
            sh 'php -r "if (hash_file(\'sha384\', \'composer-setup.php\') === \'YOUR_HASH_HERE\') { echo \'Installer verified\'; } else { echo \'Installer corrupt\'; unlink(\'composer-setup.php\'); } echo PHP_EOL;"'
            sh 'php composer-setup.php'
            sh 'php -r "unlink(\'composer-setup.php\');"'

            // Install PHP dependencies using Composer
            sh 'php composer.phar install'
              }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Your PHP test execution steps here
                    sh 'phpunit'
                }
            }
        }

        stage('Deploy to AWS') {
            when {
                branch 'main' // Deploy only from the 'main' branch
            }
            steps {
                script {
                    // Use AWS CLI to deploy to Elastic Beanstalk
                    sh 'aws elasticbeanstalk create-application-version --application-name YourAppName --version-label $BUILD_NUMBER --source-bundle S3Bucket=your-s3-bucket-name,S3Key=your-app-name/$BUILD_NUMBER/your-app-name.zip'
                    sh 'aws elasticbeanstalk update-environment --environment-name YourEnvironmentName --version-label $BUILD_NUMBER'
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}